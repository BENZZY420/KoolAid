local Notification
-- Ensure Notification is loaded correctly
local success, err = pcall(function()
    Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
end)

if not success then
    warn("Failed to load Notification: " .. err)
    return  -- Stop script execution if Notification failed to load
end

local Players, ReplicatedStorage, LocalPlayer = game:GetService("Players"), game:GetService("ReplicatedStorage"), game.Players.LocalPlayer
local ExoticShopRemote, ExoticStock = ReplicatedStorage:WaitForChild("ExoticShopRemote"), ReplicatedStorage:WaitForChild("ExoticStock")

local ScreenGui = Instance.new("ScreenGui", LocalPlayer.PlayerGui)
local Frame = Instance.new("Frame", ScreenGui)
Frame.Size, Frame.Position, Frame.BackgroundColor3 = UDim2.fromScale(0.14, 0.14), UDim2.fromScale(0.82, 0.05), Color3.fromRGB(25, 25, 25)
Frame.BorderSizePixel = 0

local Topbar = Instance.new("Frame", Frame)
Topbar.Size, Topbar.BackgroundColor3 = UDim2.fromScale(1, 0.15), Color3.fromRGB(45, 45, 45)

local ShopTitle = Instance.new("TextLabel", Topbar)
ShopTitle.Size, ShopTitle.Text, ShopTitle.TextColor3, ShopTitle.Font, ShopTitle.TextSize, ShopTitle.TextScaled, ShopTitle.BackgroundTransparency = UDim2.fromScale(0.8, 1), "Farming Shop", Color3.new(1, 1, 1), Enum.Font.SourceSansBold, 20, true, 1

-- Add the 'X' button to close the shop UI
local CloseButton = Instance.new("TextButton", Topbar)
CloseButton.Size, CloseButton.Position, CloseButton.Text, CloseButton.BackgroundColor3, CloseButton.TextColor3, CloseButton.Font, CloseButton.TextSize, CloseButton.TextScaled = UDim2.fromScale(0.15, 1), UDim2.fromScale(0.85, 0), "X", Color3.fromRGB(255, 0, 0), Color3.new(1, 1, 1), Enum.Font.SourceSansBold, 24, true
CloseButton.BorderSizePixel = 0

CloseButton.MouseButton1Click:Connect(function()
    ScreenGui.Enabled = false  -- This will hide the entire ScreenGui when the button is clicked
end)

local Holder = Instance.new("Frame", Frame)
Holder.Size, Holder.Position, Holder.BackgroundTransparency = UDim2.fromScale(1, 0.85), UDim2.fromScale(0, 0.15), 1

local UIListLayout = Instance.new("UIListLayout", Holder)
UIListLayout.FillDirection, UIListLayout.SortOrder, UIListLayout.Padding = Enum.FillDirection.Vertical, Enum.SortOrder.LayoutOrder, UDim.new(0, 5)  -- Increased padding to create more space between items

local ShopItems = {
    ["Ice-Fruit Bag"] = 2500, ["Ice-Fruit Cupz"] = 150, ["FijiWater"] = 48, ["FreshWater"] = 48
}

local lastPurchaseTimes = {}  -- Track the last purchase time for each item

local function ListItems()
    for _, child in ipairs(Holder:GetChildren()) do if child:IsA("Frame") then child:Destroy() end end
    for name, price in pairs(ShopItems) do
        local ItemFrame = Instance.new("Frame", Holder)
        ItemFrame.Size, ItemFrame.BackgroundTransparency = UDim2.fromScale(1, 0.18), 1

        local ItemName = Instance.new("TextLabel", ItemFrame)
        ItemName.Size, ItemName.Text, ItemName.TextColor3, ItemName.Font, ItemName.TextScaled, ItemName.BackgroundTransparency = UDim2.fromScale(0.48, 1), name, Color3.new(1, 1, 1), Enum.Font.SourceSans, true, 1
        ItemName.Position = UDim2.fromScale(0, 0.1)  -- Adjusted position for spacing

        local BuyButton = Instance.new("TextButton", ItemFrame)
        BuyButton.Size, BuyButton.Position, BuyButton.Text, BuyButton.BackgroundColor3, BuyButton.TextColor3, BuyButton.Font, BuyButton.TextScaled = UDim2.fromScale(0.45, 1), UDim2.fromScale(0.54, 0.3), "Buy ($" .. price .. ")", Color3.fromRGB(0, 100, 0), Color3.new(1, 1, 1), Enum.Font.SourceSansBold, true  -- Adjusted position for spacing

        BuyButton.MouseButton1Click:Connect(function()
            local currentTime = tick()

            -- Check if the user tried to buy the item again within 1 second
            if lastPurchaseTimes[name] and currentTime - lastPurchaseTimes[name] < 1 then
                -- Notify the user that they need to wait due to cooldown
                if Notification then
                    Notification:Notify({Title = "Cooldown", Description = "Please wait before trying again."}, {OutlineColor = Color3.fromRGB(200, 100, 0), Time = 1.5, Type = "default"})
                end
                return  -- Prevent the purchase if it's attempted too soon (within 1 second)
            end
            
            -- Update the last purchase time for this item
            lastPurchaseTimes[name] = currentTime

            local itemObj = ExoticStock:FindFirstChild(name)
            local success, message = pcall(function() return ExoticShopRemote:InvokeServer(name) end)
            if itemObj and itemObj.Value > 0 then
                if Notification then
                    Notification:Notify({Title = success and "Purchase Complete" or "Error", Description = success and "You bought " .. name or message}, {OutlineColor = success and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0), Time = 1.5, Type = "default"})
                end
            else
                -- Display custom notification for out of stock items
                if Notification then
                    Notification:Notify({Title = "Out of Stock", Description = name .. " is out of stock!"}, {OutlineColor = Color3.fromRGB(200, 0, 0), Time = 1.5, Type = "default"})
                end
            end
        end)
    end
end

-- Hook into RenderStepped to remove both "Out of Stock" and "Please wait at least 1s before buying again" messages
game:GetService("RunService").RenderStepped:Connect(function()
    for _, gui in pairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
        if gui:IsA("ScreenGui") then
            for _, obj in pairs(gui:GetDescendants()) do
                if obj:IsA("TextLabel") or obj:IsA("TextButton") then
                    local text = obj.Text:gsub("%s+", " "):lower()

                    -- Check if the message is "This item is out of stock." and remove it
                    if text:match("this item is out of stock.") then
                        obj:Destroy()  -- Destroy the element if the message matches
                    end

                    -- Check if the message is "Please wait at least 1s before buying again" and remove it
                    if text:match("please wait at least 1s before buying again") then
                        obj:Destroy()  -- Destroy the element if the message matches
                    end
                end
            end
        end
    end
end)

ScreenGui.Enabled = true
ListItems()
